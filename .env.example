# ============================================================================
# Enhanced Document Converter v2.1 - Environment Configuration
# ============================================================================

# REQUIRED: Mistral AI API Key
# Get your API key from: https://console.mistral.ai/api-keys/
MISTRAL_API_KEY="your_mistral_api_key_here"

# ============================================================================
# Mistral OCR Configuration
# ============================================================================

# OCR Model (ALWAYS use mistral-ocr-latest for OCR tasks)
# This is the dedicated OCR model - do not substitute with other models
MISTRAL_OCR_MODEL="mistral-ocr-latest"

# Include images in OCR response (base64 encoded)
# Set to true to extract and save images from documents
MISTRAL_INCLUDE_IMAGES=true

# Save raw JSON metadata from Mistral OCR
# IMPORTANT: Set to true to enable OCR quality assessment and weak page detection
# The Hybrid mode uses this JSON to compute quality scores and identify issues
SAVE_MISTRAL_JSON=true

# ============================================================================
# Advanced Mistral Features
# ============================================================================

# Function Calling
# Enable structured data extraction (financial tables, metadata, etc.)
MISTRAL_ENABLE_FUNCTIONS=false

# Structured Outputs
# Enable JSON schema-based responses for predictable data extraction
MISTRAL_ENABLE_STRUCTURED_OUTPUT=true

# Document Schema Type
# Options: invoice, financial_statement, form, generic, auto
# Controls the JSON schema used for document-level structured extraction
MISTRAL_DOCUMENT_SCHEMA_TYPE="auto"

# Bounding Box Annotation
# Enable structured extraction for individual bounding boxes (text regions, tables, figures)
MISTRAL_ENABLE_BBOX_ANNOTATION=false

# Document Annotation
# Enable structured extraction for entire document (metadata, sections, summary)
MISTRAL_ENABLE_DOCUMENT_ANNOTATION=false

# Image Optimization
# Automatically optimize images before OCR for better results
MISTRAL_ENABLE_IMAGE_OPTIMIZATION=true

# Image Preprocessing
# Apply preprocessing (contrast, sharpening, resizing) before OCR
MISTRAL_ENABLE_IMAGE_PREPROCESSING=false

# Maximum Image Dimension
# Resize images larger than this dimension (maintains aspect ratio)
MISTRAL_MAX_IMAGE_DIMENSION=2048

# Image Quality Threshold (1-100)
# Minimum quality score for image extraction
MISTRAL_IMAGE_QUALITY_THRESHOLD=70

# ============================================================================
# MarkItDown Configuration
# ============================================================================

# LLM-Powered Image Descriptions
# Use LLM to generate descriptions for images during conversion
MARKITDOWN_USE_LLM=false

# LLM Model for Image Descriptions
# Required if MARKITDOWN_USE_LLM=true
MARKITDOWN_LLM_MODEL="gpt-4-vision-preview"

# ============================================================================
# MarkItDown Plugin Features (Optional Dependencies)
# ============================================================================
# Enable third-party MarkItDown plugins and extended features.
# See requirements-optional.txt and DEPENDENCIES.md for installation details.

# Plugin System
# Set to true to enable audio transcription and YouTube transcript fetching
# IMPORTANT: Requires optional dependencies to be installed first!
#   - Audio transcription: pip install pydub SpeechRecognition
#   - YouTube transcription: pip install youtube-transcript-api
#   - Or install all: pip install -r requirements-optional.txt
MARKITDOWN_ENABLE_PLUGINS=false

# ============================================================================
# Feature Availability Matrix (when MARKITDOWN_ENABLE_PLUGINS=true)
# ============================================================================
#
# AUDIO TRANSCRIPTION (Mode 5):
#   Dependencies: pydub, SpeechRecognition, ffmpeg binary
#   Supported formats: MP3, WAV, M4A, FLAC
#   System requirement: ffmpeg must be installed
#     - Windows: Download from https://www.gyan.dev/ffmpeg/builds/
#     - macOS: brew install ffmpeg
#     - Linux: apt-get install ffmpeg
#   Install: pip install pydub SpeechRecognition
#
# YOUTUBE TRANSCRIPTION:
#   Dependencies: youtube-transcript-api
#   Fetches existing transcripts/subtitles from YouTube videos
#   Install: pip install youtube-transcript-api
#
# AZURE DOCUMENT INTELLIGENCE:
#   Dependencies: azure-ai-documentintelligence, azure-identity
#   Requires Azure resource (see AZURE_DOC_INTEL_ENDPOINT/KEY below)
#   Install: pip install azure-ai-documentintelligence azure-identity
#   Setup: https://portal.azure.com/
#
# OUTLOOK MSG FILES:
#   Dependencies: olefile
#   Automatically enabled when olefile is installed
#   Install: pip install olefile
#
# ============================================================================

# ============================================================================
# Optional API Keys
# ============================================================================

# OpenAI API Key (for LLM-powered features)
# Get your key from: https://platform.openai.com/api-keys
OPENAI_API_KEY=""

# Azure Document Intelligence
# Get credentials from: https://portal.azure.com/
AZURE_DOC_INTEL_ENDPOINT=""
AZURE_DOC_INTEL_KEY=""

# ============================================================================
# System Configuration
# ============================================================================

# Poppler Path (Windows only)
# Path to Poppler binaries for PDF to image conversion
# Download from: https://github.com/oschwartz10612/poppler-windows/releases
# Example: "C:/Program Files/poppler-23.08.0/Library/bin"
POPPLER_PATH=""

# Ghostscript Path (Windows only, optional)
# Path to Ghostscript for advanced table extraction
# Download from: https://ghostscript.com/releases/gsdnld.html
# Example: "C:/Program Files/gs/gs10.02.1/bin"
GHOSTSCRIPT_PATH=""

# Cache Duration (hours)
# How long to keep OCR results cached before re-processing
CACHE_DURATION_HOURS=24

# Logging Level
# Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL="INFO"

# Performance Optimization
# Maximum concurrent file processing
MAX_CONCURRENT_FILES=5

# Async Operations
# Enable asynchronous processing for better performance (recommended)
ENABLE_ASYNC_OPERATIONS=true

# Streaming
# Enable streaming for real-time progress feedback during OCR processing
ENABLE_STREAMING=false

# Retry Configuration
# Number of retry attempts for failed API calls
MAX_RETRIES=3

# Initial retry interval in milliseconds
RETRY_INITIAL_INTERVAL_MS=1000

# Maximum retry interval in milliseconds
RETRY_MAX_INTERVAL_MS=10000

# Exponential backoff multiplier (2.0 = double interval each retry)
RETRY_EXPONENT=2.0

# Maximum total time for retries in milliseconds (60000 = 1 minute)
RETRY_MAX_ELAPSED_TIME_MS=60000

# Retry on connection errors
RETRY_CONNECTION_ERRORS=true

# ============================================================================
# Output Configuration
# ============================================================================

# Generate Plain Text Outputs
# Create .txt files alongside .md files
GENERATE_TXT_OUTPUT=true

# Include Metadata in Markdown
# Add YAML frontmatter with document metadata
INCLUDE_METADATA=true

# Table Output Formats
# Comma-separated: markdown, csv, json, html
TABLE_OUTPUT_FORMATS="markdown,csv"

# ============================================================================
# Advanced Features
# ============================================================================

# Enable Batch Metadata Tracking
# Track detailed metrics for batch operations
ENABLE_BATCH_METADATA=true

# Auto-Clear Old Cache
# Automatically remove cache entries older than CACHE_DURATION_HOURS
AUTO_CLEAR_CACHE=true

# Verbose Progress
# Show detailed progress information during processing
VERBOSE_PROGRESS=true

# Save Processing Logs
# Save detailed processing logs to logs/ directory
SAVE_PROCESSING_LOGS=true
